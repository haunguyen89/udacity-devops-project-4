# Workflow name
name: Frontend Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code Frontend
        uses: actions/checkout@v3

      - name: Setup NodeJS Frontend
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Restore cache and install dependencies Frontend
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies Frontend
        working-directory: ./starter/frontend
        run: npm ci

      - name: Run linting Frontend
        working-directory: ./starter/frontend
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code Frontend
        uses: actions/checkout@v3

      - name: Setup NodeJS Frontend
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Restore cache and install dependencies Frontend
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies Frontend
        working-directory: ./starter/frontend
        run: npm ci

      - name: Run tests Frontend
        working-directory: ./starter/frontend
        run: npm run test

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code Frontend
        uses: actions/checkout@v3

      - name: Setup NodeJS Frontend
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Restore cache and install dependencies Frontend
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build and Run Docker Image Frontend
        working-directory: ./starter/frontend
        run: |
          docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag=mp-frontend:latest .
          docker run --name mp-frontend -p 3000:3000 -d mp-frontend